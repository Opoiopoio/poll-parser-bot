// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                BigInt            @id
  is_bot            Boolean?
  first_name        String
  last_name         String?
  username          String?
  language_code     String?
  is_premium        Boolean?
  polls             Poll[]
  user_poll_options UserPollOptions[]
  settings          UserSettings?
}

model UserSettings {
  id               BigInt @id @default(autoincrement())
  user             User   @relation(fields: [user_id], references: [id])
  user_id          BigInt @unique
  statistic_format String @default("tag")
}

model UserPollOptions {
  id        BigInt      @id @default(autoincrement())
  option    PollOption? @relation(fields: [option_id], references: [id])
  user      User?       @relation(fields: [user_id], references: [id])
  option_id BigInt?
  user_id   BigInt?

  @@index([option_id, user_id])
}

model PollOption {
  id                BigInt            @id @default(autoincrement())
  text              String
  voter_count       Int
  poll              Poll              @relation(fields: [poll_id], references: [id])
  poll_id           String
  user_poll_options UserPollOptions[]
}

model PollStatisticMessage {
  id      BigInt @id
  poll    Poll   @relation(fields: [poll_id], references: [id])
  poll_id String
  chat_id BigInt
}

model Poll {
  id                      String                 @id
  question                String
  type                    String
  allows_multiple_answers Boolean
  options                 PollOption[]
  author                  User                   @relation(fields: [author_id], references: [id])
  author_id               BigInt
  PollStatisticMessage    PollStatisticMessage[]
}
